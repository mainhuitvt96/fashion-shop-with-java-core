package view;

import model.entity.Category;
import model.entity.User.Customer;
import model.entity.User.Owner;
import model.exeption.InvalidChoiceException;
import model.service.*;
import model.util.Input;

import javax.swing.plaf.synth.SynthOptionPaneUI;

public class OnlineFashionShoppingView {
    private static final  OnlineFashionShoppingView onlineFashionShoppingView = new OnlineFashionShoppingView();
    private  OnlineFashionShoppingView(){

    }
    public  static  OnlineFashionShoppingView getInstance(){
        return onlineFashionShoppingView;
    }
   private  static  final UserService userService = UserService.getInstance();
    private static final CategoryService categoryService = CategoryService.getInstance();
    private  static  final ProductServiceDTO productServiceDTO = ProductServiceDTO.getInstance();
    private  static  final VariantService variantService = VariantService.getInstance();
    private  static  final CartLineService cartLineService = CartLineService.getInstance();
    private  static  final OrderService orderService = OrderService.getInstance();
    public void displayMainMenu(){
        do {
            try{
                System.out.println("""
                                                     üå∏‚ùÑ‚ôï‚ôï‚ôïüíñüíñüíñ‚ôï‚ôï‚ôï‚ùÑüå∏
                        „ÄêCH√ÄO M·ª™NG TRANG TH∆Ø∆†NG M·∫†I MUA S·∫ÆM  QU·∫¶N √ÅO TR·ª∞C TUY·∫æN T·∫†I VI·ªÜT NAM„Äë
                        Vui l√≤ng l·ª±a ch·ªçn 1 trong nh·ªØng l·ª±a ch·ªçn sau:
                        ‚ë† ƒêƒÉng k√Ω ‚å®
                        ‚ë° ƒêƒÉng nh·∫≠p ‚çá
                        ‚ì∑ T·∫Øt ch∆∞∆°ng tr√¨nh ‚ñ£
                        """);
                int choice = Input.choiceIntegerInput("Nh·∫≠p v√†o l·ª±a ch·ªçn: ");
                switch (choice){
                    case 1 -> userService.signUp();
                    case 2 ->{
                        userService.logIn();
                        if (userService.getCurrentUser() instanceof Customer) {
                            displayCustomerrInterface();
                            break;
                        } else if (userService.getCurrentUser() instanceof Owner) {
                            displayOwerInterface();
                            break;
                        }
                    }
                    case 3 -> System.exit(0);
                    default -> throw new InvalidChoiceException("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá, nh·∫≠p v√†o 1,2 ho·∫∑c 3");
                }
            }catch (Exception e){
                System.err.println(e.getMessage());
            }

        }while (true);
    }
    public void displayOwerInterface(){
        do {
            try {
                System.out.println("""
                        ------------------------OWNER------------------------
                        ‚ûä. Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m ƒëang c√≥
                        ‚ûã. Th√™m/ X√≥a/ S·ª≠a s·∫£n ph·∫©m
                        ‚ûå. Xem th√¥ng tin t√†i kho·∫£n v√† ch·ªânh s·ª≠a
                        ‚ûç. Xem th√¥ng tin kh√°ch h√†ng
                        ‚ûé. Th√™m/X√≥a/ S·ª≠a danh m·ª•c s·∫£n ph·∫©m
                        ‚ûè. Th√™m x√≥a s·ª≠a Variant
                        ‚ûê. S·∫Øp x·∫øp danh s√°ch s·∫£n ph·∫©m
                        ‚ûë. Logout
                        ‚ùæ. ƒê√≥ng ch∆∞∆°ng tr√¨nh
                        """);
                int choice = Input.choiceIntegerInput("Nh·∫•n ph√≠m t·∫Øt ƒë·ªÉ thao t√°c ·ª©ng d·ª•ng: ");
                switch (choice) {
                    case 1 -> productServiceDTO.displayDetailOfProduct();
                    case 2 -> productServiceDTO.customizeProduct();
                    case 3 -> {
                        System.out.println(userService.getCurrentUser());
                        userService.editAccountInformation();
                    }
                    case 4 -> userService.getCustomerInfo();
                    case 5 -> categoryService.customizeCategory();
                    case 6 -> variantService.customizeVariant();
                    case 7 -> productServiceDTO.sortProduct();
                    case 8 -> displayMainMenu();
                    case 9 -> System.exit(0);
                    default -> throw new InvalidChoiceException("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
                }
            }catch (Exception e) {
                System.out.println("X·∫£y ra l·ªói h·ªá th·ªëng/ Invalid input/ Format Unexpected " + e.getMessage());
            }
        }while (true);
    }
    public void displayCustomerrInterface(){
        do {
            try {
                System.out.println("""
                        ----------------------CUSTOMER----------------------
                        ‚ûä. Hi·ªÉn th·ªã s·∫£n ph·∫©m trong gi·ªè h√†ng
                        ‚ûã. Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
                        ‚ûå. T√¨m s·∫£n ph·∫©m theo T√™n
                        ‚ûç. Xem th√¥ng tin c√° nh√¢n ng∆∞·ªùi d√πng
                        ‚ûé. Hi·ªÉn th·ªã to√†n b·ªô danh s√°ch s·∫£n ph·∫©m ƒëang c√≥
                        ‚ûè. Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m theo danh m·ª•c
                        ‚ûê. Ki·ªÉm tra danh s√°ch s·∫£n ph·∫©m c√≥ bao nhi√™u variant
                        ‚ûë. Logout
                        ‚ùæ. ƒê√≥ng ch∆∞∆°ng tr√¨nh
                        """);
                int choice = Input.choiceIntegerInput("Nh·∫•n ph√≠m t·∫Øt ƒë·ªÉ thao t√°c ·ª©ng d·ª•ng: ");
                switch (choice) {
                    case 1 -> orderService.checkCart();
                    case 2 -> productServiceDTO.selectItemToBuy();
                    case 3 -> productServiceDTO.findProductByName();
                    case 4 -> {
                        System.out.println(userService.getCurrentUser());
                        userService.editAccountInformation();
                    }
                    case 5 ->  productServiceDTO.displayDetailOfProduct();
                    case 6 -> productServiceDTO.displayProductByCategoryID();
                    case 7 ->{
                        productServiceDTO.displayBasicProductList();
                        int productID = Input.choiceIntegerInput("Nh·∫≠p v√†o th√¥ng tin ID b·∫°n mu·ªën xem Vairiant");
                        variantService.displayVariantListByProductID(productID);
                    }
                    case 8 -> displayMainMenu();
                    case 9 -> System.exit(0);
                    default -> throw new InvalidChoiceException("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
                }
            }catch (Exception e) {
                System.out.println("X·∫£y ra l·ªói h·ªá th·ªëng/ Invalid input/ Format Unexpected " + e.getMessage());
            }
        }while (true);
    }

}
